service: reto-star-wars-api

frameworkVersion: '3'

plugins:
  - serverless-plugin-typescript
  - serverless-jetpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  timeout: 20
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        - { 'Fn::GetAtt': ['planetasTable', 'Arn'] }

resources:
  Resources:
    planetasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: planetas
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  api:
    handler: src/lambda.handler
    events:
      - httpApi:
          method: any
          path: /{proxy+}
